{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ROUTES","PageNavLink","to","text","isActive","classNames","ParentLink","people","name","sex","parent","find","person","isPresent","slug","TodosPage","useState","setPeople","isLoading","setIsLoading","isError","setIsError","activePerson","useParams","isReadyToShow","useEffect","res","catch","finally","length","map","born","died","motherName","fatherName","Navigation","role","App","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.aa5182df.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import {\n  Link,\n  Navigate,\n  NavLink,\n  Route,\n  Routes,\n  useParams,\n} from 'react-router-dom';\nimport {\n  FC,\n  useEffect,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\n\nimport './App.scss';\nimport { Loader } from './components/Loader';\nimport { Person } from './types';\nimport { getPeople } from './api';\n\nconst ROUTES = {\n  home: '/',\n  people: '/people',\n};\n\nconst PageNavLink: FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={`${to}`}\n    >\n      {text}\n    </NavLink>\n  );\n};\n\ninterface Props {\n  to: string;\n  text: string;\n}\n\ninterface ParentProps {\n  people: Person[];\n  name: string;\n  sex: 'f' | 'm';\n}\n\nconst ParentLink: FC<ParentProps> = ({ people, name, sex }) => {\n  const parent = people.find(person => person.name === name);\n  const isPresent = !!parent;\n\n  return (\n    <td>\n      {isPresent ? (\n        <Link\n          className={classNames({\n            'has-text-danger': sex === 'f',\n          })}\n          to={`${ROUTES.people}/${parent.slug}`}\n        >\n          {parent.name}\n        </Link>\n      ) : (name)}\n    </td>\n  );\n};\n\nconst TodosPage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const { activePerson } = useParams();\n\n  const isReadyToShow = !isLoading && !isError;\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(res => {\n        setPeople(res);\n      })\n      .catch(() => {\n        setIsError(true);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className=\"container\">\n\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {isError\n            && !isLoading\n            && (\n              <p\n                data-cy=\"peopleLoadingError\"\n                className=\"has-text-danger\"\n              >\n                Something went wrong\n              </p>\n            )}\n\n          {isReadyToShow && (\n            <>\n              {\n                people.length === 0 ? (\n                  <p data-cy=\"noPeopleMessage\">\n                    There are no people on the server\n                  </p>\n                ) : (\n                  <table\n                    data-cy=\"peopleTable\"\n                    className=\"\n    table is-striped\n    is-hoverable\n    is-narrow\n    is-fullwidth\"\n                  >\n                    <thead>\n                      <tr>\n                        <th>Name</th>\n                        <th>Sex</th>\n                        <th>Born</th>\n                        <th>Died</th>\n                        <th>Mother</th>\n                        <th>Father</th>\n                      </tr>\n                    </thead>\n\n                    <tbody>\n                      {people.map(person => (\n                        <tr\n                          key={person.slug}\n                          data-cy=\"person\"\n                          className={classNames({\n                            /* eslint-disable-next-line */\n                            'has-background-warning': activePerson === person.slug,\n                          })}\n                        >\n                          <td>\n                            <Link\n                              to={`${ROUTES.people}/${person.slug}`}\n                              className={classNames({\n                                'has-text-danger': person.sex === 'f',\n                              })}\n                            >\n                              {person.name}\n                            </Link>\n                          </td>\n                          <td>{person.sex}</td>\n                          <td>{person.born}</td>\n                          <td>{person.died}</td>\n                          {person.motherName ? (\n                            <ParentLink\n                              people={people}\n                              name={person.motherName}\n                              sex=\"f\"\n                            />\n                          ) : (\n                            <td>\n                              -\n                            </td>\n                          )}\n                          {person.fatherName ? (\n                            <ParentLink\n                              people={people}\n                              name={person.fatherName}\n                              sex=\"m\"\n                            />\n                          ) : (\n                            <td>\n                              -\n                            </td>\n                          )}\n                        </tr>\n                      ))}\n                    </tbody>\n                  </table>\n                )\n              }\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst Navigation = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to={ROUTES.home} text=\"Home\" />\n          <PageNavLink to={ROUTES.people} text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <Routes>\n        <Route\n          path=\"*\"\n          element={\n            <h1 className=\"title\">Page not found</h1>\n          }\n        />\n        <Route\n          path=\"/home\"\n          element={\n            <Navigate to=\"/\" replace />\n          }\n        />\n        <Route\n          path=\"/\"\n          element={\n            <h1 className=\"title\">Home Page</h1>\n          }\n        />\n        <Route\n          path=\"/people\"\n          element={(\n            <main className=\"section\">\n              <TodosPage />\n            </main>\n          )}\n        >\n          <Route\n            index\n            element={(\n              <main className=\"section\">\n                <TodosPage />\n              </main>\n            )}\n          />\n          <Route\n            path=\"/people/:activePerson\"\n            element={(\n              <main className=\"section\">\n                <TodosPage />\n              </main>\n            )}\n          />\n        </Route>\n      </Routes>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}